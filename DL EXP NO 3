{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1MRCx3Ku3eJAvz4d9Ecsl6R8_LeqEXnCT","timestamp":1706159390829}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Name:Selvina Swarna\n","Moodle Id: 20102194\n","Roll no:52\n","                                                         **Experiment NO:03**\n","\n"],"metadata":{"id":"EWy9ULZi00Vf"}},{"cell_type":"markdown","source":["Feed Forward NN for Learning of AND, OR, and NAND problem by weight updation\n"],"metadata":{"id":"ysYzNekV1wYz"}},{"cell_type":"code","source":["import numpy as np\n","class basic_NN_3ip:\n","  def __init__(self,iv,ov,it=20):\n","    self.input_vector = np.array(iv)\n","    self.output_vector = np.array(ov)\n","    self.weight_vector = np.array([[2,3,-1,1]]) ### Any random weights , be sure to modify as per the size of the inputs\n","    self.output = np.array([])\n","    self.err_vector = np.zeros((1,4)) ### modify this too as per the size of the inputs\n","    self.eta = 0.3\n","    self.iterations = it\n","  def compute(self):\n","    mfv = np.c_[np.ones(8),self.input_vector] # and this one too, N = 2^inputsize\n","    for i in range(0,self.iterations):\n","      self.result = mfv.dot(self.weight_vector.transpose())\n","      self.output = [0 if result < 0 else 1 for result in self.result]\n","      print(\"output after \",i,\" iterations : \",self.output)\n","      self.weight_vector = self.update_weight(mfv)\n","  def update_weight(self,wv):\n","    sum = 0\n","    for i in range(self.output_vector.size):\n","      sum = sum + (self.output[i]-self.output_vector[i])*wv[i]\n","      updated_weight = self.weight_vector - self.eta*sum\n","      return updated_weight\n","  def show_result(self):\n","    print(\"Input Vector : \\n\",self.input_vector)\n","    print(\"Output : \\n\",self.output)\n","    print(\"Weight Vector : \\n\",self.weight_vector)\n","  def get_output(self):\n","    return self.output\n","# End of basic NN with three inputs\n"],"metadata":{"id":"TXJOEJXW00zB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Feed Forward NN for Learning AND problem by weight updation"],"metadata":{"id":"UJVcyFst11b3"}},{"cell_type":"code","source":["iv = np.array([\n","[0,0,0],\n","[0,0,1],\n","[0,1,0],\n","[0,1,1],\n","[1,0,0],\n","[1,0,1],\n","[1,1,0],\n","[1,1,1]\n","])\n","ov = np.array([0,0,0,0,0,0,0,1])\n","n = basic_NN_3ip(iv,ov)\n","n.compute()\n","n.show_result()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9cm4BATezakk","executionInfo":{"status":"ok","timestamp":1706155688132,"user_tz":-330,"elapsed":395,"user":{"displayName":"Sakshi Thakare","userId":"03170749360661444864"}},"outputId":"6e8463fe-f9c0-4362-babb-8392a851437c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["output after  0  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  1  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  2  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  3  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  4  iterations :  [1, 1, 0, 1, 1, 1, 1, 1]\n","output after  5  iterations :  [1, 1, 0, 1, 1, 1, 1, 1]\n","output after  6  iterations :  [1, 1, 0, 1, 1, 1, 1, 1]\n","output after  7  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  8  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  9  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  10  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  11  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  12  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  13  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  14  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  15  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  16  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  17  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  18  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  19  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","Input Vector : \n"," [[0 0 0]\n"," [0 0 1]\n"," [0 1 0]\n"," [0 1 1]\n"," [1 0 0]\n"," [1 0 1]\n"," [1 1 0]\n"," [1 1 1]]\n","Output : \n"," [0, 1, 0, 0, 1, 1, 1, 1]\n","Weight Vector : \n"," [[-0.1  3.  -1.   1. ]]\n"]}]},{"cell_type":"markdown","source":["Feed Forward NN for Learning OR problem by weight updation"],"metadata":{"id":"dfLf31FZ15tt"}},{"cell_type":"code","source":["iv = np.array([\n","[0,0,0],\n","[0,0,1],\n","[0,1,0],\n","[0,1,1],\n","[1,0,0],\n","[1,0,1],\n","[1,1,0],\n","[1,1,1]\n","])\n","ov = np.array([0,1,1,1,1,1,1,1])\n","n = basic_NN_3ip(iv,ov)\n","n.compute()\n","n.show_result()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DPyzYdpTzrEM","executionInfo":{"status":"ok","timestamp":1706155760386,"user_tz":-330,"elapsed":386,"user":{"displayName":"Sakshi Thakare","userId":"03170749360661444864"}},"outputId":"0a70d5c7-d08c-48ea-9a38-3922f878ffcd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["output after  0  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  1  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  2  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  3  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  4  iterations :  [1, 1, 0, 1, 1, 1, 1, 1]\n","output after  5  iterations :  [1, 1, 0, 1, 1, 1, 1, 1]\n","output after  6  iterations :  [1, 1, 0, 1, 1, 1, 1, 1]\n","output after  7  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  8  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  9  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  10  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  11  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  12  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  13  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  14  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  15  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  16  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  17  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  18  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","output after  19  iterations :  [0, 1, 0, 0, 1, 1, 1, 1]\n","Input Vector : \n"," [[0 0 0]\n"," [0 0 1]\n"," [0 1 0]\n"," [0 1 1]\n"," [1 0 0]\n"," [1 0 1]\n"," [1 1 0]\n"," [1 1 1]]\n","Output : \n"," [0, 1, 0, 0, 1, 1, 1, 1]\n","Weight Vector : \n"," [[-0.1  3.  -1.   1. ]]\n"]}]},{"cell_type":"markdown","source":["Feed Forward NN for Learning NAND problem by weight updation"],"metadata":{"id":"O634y0pK192c"}},{"cell_type":"code","source":["iv = np.array([\n","[0,0,0],\n","[0,0,1],\n","[0,1,0],\n","[0,1,1],\n","[1,0,0],\n","[1,0,1],\n","[1,1,0],\n","[1,1,1]\n","])\n","ov = np.array([1,1,1,1,1,1,1,0])\n","n = basic_NN_3ip(iv,ov)\n","n.compute()\n","n.show_result()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v8-MmXJK2Sfa","executionInfo":{"status":"ok","timestamp":1706156439555,"user_tz":-330,"elapsed":446,"user":{"displayName":"Sakshi Thakare","userId":"03170749360661444864"}},"outputId":"f73c90ca-ee62-436d-e536-193abb34c476"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["output after  0  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  1  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  2  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  3  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  4  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  5  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  6  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  7  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  8  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  9  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  10  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  11  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  12  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  13  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  14  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  15  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  16  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  17  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  18  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  19  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","Input Vector : \n"," [[0 0 0]\n"," [0 0 1]\n"," [0 1 0]\n"," [0 1 1]\n"," [1 0 0]\n"," [1 0 1]\n"," [1 1 0]\n"," [1 1 1]]\n","Output : \n"," [1, 1, 1, 1, 1, 1, 1, 1]\n","Weight Vector : \n"," [[ 2.  3. -1.  1.]]\n"]}]},{"cell_type":"markdown","source":["Feed Forward NN for Learning NOR problem by weight updation"],"metadata":{"id":"lNvfSnbT2Wlb"}},{"cell_type":"code","source":["iv = np.array([\n","[0,0,0],\n","[0,0,1],\n","[0,1,0],\n","[0,1,1],\n","[1,0,0],\n","[1,0,1],\n","[1,1,0],\n","[1,1,1]\n","])\n","ov = np.array([1,0,0,0,0,0,0,0])\n","n = basic_NN_3ip(iv,ov)\n","n.compute()\n","n.show_result()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zcj_Dh4FzxKz","executionInfo":{"status":"ok","timestamp":1706155779399,"user_tz":-330,"elapsed":415,"user":{"displayName":"Sakshi Thakare","userId":"03170749360661444864"}},"outputId":"f9bf2823-6cc2-40fd-fb18-0bb9e5090544"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["output after  0  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  1  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  2  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  3  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  4  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  5  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  6  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  7  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  8  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  9  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  10  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  11  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  12  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  13  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  14  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  15  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  16  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  17  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  18  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","output after  19  iterations :  [1, 1, 1, 1, 1, 1, 1, 1]\n","Input Vector : \n"," [[0 0 0]\n"," [0 0 1]\n"," [0 1 0]\n"," [0 1 1]\n"," [1 0 0]\n"," [1 0 1]\n"," [1 1 0]\n"," [1 1 1]]\n","Output : \n"," [1, 1, 1, 1, 1, 1, 1, 1]\n","Weight Vector : \n"," [[ 2.  3. -1.  1.]]\n"]}]}]}